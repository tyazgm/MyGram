basePath: /
definitions:
  model.CommentCreateRequest:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  model.CommentUpdateRequest:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  model.ErrorResponse:
    properties:
      code:
        type: integer
      errors: {}
      status:
        type: string
    type: object
  model.PhotoCreateRequest:
    properties:
      caption:
        type: string
      photoUrl:
        type: string
      title:
        type: string
    required:
    - photoUrl
    - title
    type: object
  model.PhotoUpdateRequest:
    properties:
      caption:
        type: string
      photo_url:
        type: string
      title:
        type: string
    required:
    - photo_url
    - title
    type: object
  model.SocialCreateRequest:
    properties:
      name:
        type: string
      social_media_url:
        type: string
    required:
    - name
    - social_media_url
    type: object
  model.SocialUpdateRequest:
    properties:
      name:
        type: string
      social_media_url:
        type: string
    required:
    - name
    - social_media_url
    type: object
  model.UserLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.UserRegisterRequest:
    properties:
      age:
        type: integer
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: Documentation of MyGram API
  title: MyGram API
  version: "1.0"
paths:
  /comment:
    get:
      consumes:
      - application/json
      description: get all comment data to the database
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get all comment
      tags:
      - Comment
  /comment/{commentID}:
    delete:
      consumes:
      - application/json
      description: delete a comment by commentID
      parameters:
      - description: commentID you want to retrieve
        in: path
        name: commentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: delete a comment
      tags:
      - Comment
    get:
      consumes:
      - application/json
      description: get on comment data from comment ID
      parameters:
      - description: commentID you want to retrieve
        in: path
        name: commentID
        required: true
        type: string
      - description: commentID you want to retrieve
        in: path
        name: commentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get comment
      tags:
      - Comment
    put:
      consumes:
      - application/json
      description: update comment by commentID
      parameters:
      - description: commentID you want to retrieve
        in: path
        name: commentID
        required: true
        type: string
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CommentUpdateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: update comment
      tags:
      - Comment
  /comment/{photoID}:
    post:
      consumes:
      - application/json
      description: add comment data to the database
      parameters:
      - description: photoID you want to retrieve
        in: path
        name: photoID
        required: true
        type: string
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CommentCreateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: add comment
      tags:
      - Comment
  /login:
    post:
      consumes:
      - application/json
      description: login to MyGram App using registered account
      parameters:
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      summary: login account
      tags:
      - User
  /photo:
    get:
      consumes:
      - application/json
      description: get all photo data to the database
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get all photo
      tags:
      - Photo
    post:
      consumes:
      - application/json
      description: add photo data to the database
      parameters:
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PhotoCreateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: add photo
      tags:
      - Photo
  /photo/{photoID}:
    delete:
      description: delete a photo by photoID
      parameters:
      - description: photoID you want to retrieve
        in: path
        name: photoID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: delete a photo
      tags:
      - photo
    get:
      consumes:
      - application/json
      description: get on photo data from photo ID
      parameters:
      - description: photoID you want to retrieve
        in: path
        name: photoID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get photo
      tags:
      - Photo
    put:
      consumes:
      - application/json
      description: update photo by photoID
      parameters:
      - description: photoID you want to retrieve
        in: path
        name: photoID
        required: true
        type: string
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.PhotoUpdateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: update photo
      tags:
      - photo
  /register:
    post:
      consumes:
      - application/json
      description: register your account to MyGram App
      parameters:
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      summary: register account
      tags:
      - User
  /socialmedia:
    get:
      consumes:
      - application/json
      description: get all social media data to the database
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get all social media
      tags:
      - Social Media
    post:
      consumes:
      - application/json
      description: add social media data to the database
      parameters:
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SocialCreateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: add social media
      tags:
      - Social Media
  /socialmedia/{socialmediaID}:
    delete:
      consumes:
      - application/json
      description: delete a social media by socialmediaID
      parameters:
      - description: socialmediaID you want to retrieve
        in: path
        name: socialmediaID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: delete a social media
      tags:
      - Social Media
    get:
      consumes:
      - application/json
      description: get on social media data from socialmedia ID
      parameters:
      - description: socialmediaID you want to retrieve
        in: path
        name: socialmediaID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: get social media
      tags:
      - Social Media
    put:
      consumes:
      - application/json
      description: update social media by socialmediaID
      parameters:
      - description: socialmediaID you want to retrieve
        in: path
        name: socialmediaID
        required: true
        type: string
      - description: request is mandatory
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.SocialUpdateRequest'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.ErrorResponse'
            - properties:
                errors:
                  type: object
              type: object
      security:
      - BearerAuth: []
      summary: update social media
      tags:
      - Social Media
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
